{
  "uid" : "185848c6531aa5ff",
  "name" : "test_easy_sum_set[array_a0-array_c0-array_b0]",
  "fullName" : "src.test.java.algorithms.EasySumSetProblem.test_easy_sum_set#test_easy_sum_set",
  "historyId" : "b760711dd661b36d06478658c78c117c",
  "time" : {
    "start" : 1618612338930,
    "stop" : 1618612338930,
    "duration" : 0
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False\n +  where False = all([False, True])",
  "statusTrace" : "array_a = [1, 2], array_c = [3, 4, 5], array_b = ['2', '3']\n\n    @pytest.mark.parametrize(\"array_a,array_c,array_b\", test_data)\n    def test_easy_sum_set(array_a: List[int],\n                          array_c: List[int], array_b: List[str]):\n        print(f\"expected = {array_b}\")\n        print(f\"actual = {calculate_b(array_a, array_c)}\")\n        assert len(array_b) == len(calculate_b(array_a, array_c))\n>       assert all([a == b for a, b in zip(\n            array_b, calculate_b(array_a, array_c))])\nE       assert False\nE        +  where False = all([False, True])\n\nsrc/test/java/algorithms/EasySumSetProblem/test_easy_sum_set.py:21: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False\n +  where False = all([False, True])",
    "statusTrace" : "array_a = [1, 2], array_c = [3, 4, 5], array_b = ['2', '3']\n\n    @pytest.mark.parametrize(\"array_a,array_c,array_b\", test_data)\n    def test_easy_sum_set(array_a: List[int],\n                          array_c: List[int], array_b: List[str]):\n        print(f\"expected = {array_b}\")\n        print(f\"actual = {calculate_b(array_a, array_c)}\")\n        assert len(array_b) == len(calculate_b(array_a, array_c))\n>       assert all([a == b for a, b in zip(\n            array_b, calculate_b(array_a, array_c))])\nE       assert False\nE        +  where False = all([False, True])\n\nsrc/test/java/algorithms/EasySumSetProblem/test_easy_sum_set.py:21: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "690bffd7c28c84f7",
      "name" : "stdout",
      "source" : "690bffd7c28c84f7.txt",
      "type" : "text/plain",
      "size" : 42
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "src.test.java.algorithms.EasySumSetProblem"
  }, {
    "name" : "suite",
    "value" : "test_easy_sum_set"
  }, {
    "name" : "host",
    "value" : "fv-az193-651"
  }, {
    "name" : "thread",
    "value" : "3142-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "src.test.java.algorithms.EasySumSetProblem.test_easy_sum_set"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "array_a",
    "value" : "[1, 2]"
  }, {
    "name" : "array_b",
    "value" : "['2', '3']"
  }, {
    "name" : "array_c",
    "value" : "[3, 4, 5]"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "185848c6531aa5ff.json",
  "parameterValues" : [ "[1, 2]", "['2', '3']", "[3, 4, 5]" ]
}