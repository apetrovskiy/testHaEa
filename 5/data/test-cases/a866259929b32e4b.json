{
  "uid" : "a866259929b32e4b",
  "name" : "test_easy_sum_set[array_a2-array_c2-array_b2]",
  "fullName" : "src.test.java.algorithms.EasySumSetProblem.test_easy_sum_set#test_easy_sum_set",
  "historyId" : "aea9ff9698e4a1e5bbba8875430784b2",
  "time" : {
    "start" : 1618941875359,
    "stop" : 1618941875360,
    "duration" : 1
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 2 == 5\n +  where 2 = len(['2', '4'])\n +  and   5 = len({'1', '2', '3', '4', '5'})\n +    where {'1', '2', '3', '4', '5'} = calculate_b([4, 3, 5, 1], [3, 5, 6, 7, 8, 9])",
  "statusTrace" : "array_a = [4, 3, 5, 1], array_c = [3, 5, 6, 7, 8, 9], array_b = ['2', '4']\n\n    @pytest.mark.parametrize(\"array_a,array_c,array_b\", test_data)\n    def test_easy_sum_set(array_a: List[int],\n                          array_c: List[int], array_b: List[str]):\n        print(f\"expected = {array_b}\")\n        print(f\"actual = {calculate_b(array_a, array_c)}\")\n>       assert len(array_b) == len(calculate_b(array_a, array_c))\nE       AssertionError: assert 2 == 5\nE        +  where 2 = len(['2', '4'])\nE        +  and   5 = len({'1', '2', '3', '4', '5'})\nE        +    where {'1', '2', '3', '4', '5'} = calculate_b([4, 3, 5, 1], [3, 5, 6, 7, 8, 9])\n\nsrc/test/java/algorithms/EasySumSetProblem/test_easy_sum_set.py:20: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 2 == 5\n +  where 2 = len(['2', '4'])\n +  and   5 = len({'1', '2', '3', '4', '5'})\n +    where {'1', '2', '3', '4', '5'} = calculate_b([4, 3, 5, 1], [3, 5, 6, 7, 8, 9])",
    "statusTrace" : "array_a = [4, 3, 5, 1], array_c = [3, 5, 6, 7, 8, 9], array_b = ['2', '4']\n\n    @pytest.mark.parametrize(\"array_a,array_c,array_b\", test_data)\n    def test_easy_sum_set(array_a: List[int],\n                          array_c: List[int], array_b: List[str]):\n        print(f\"expected = {array_b}\")\n        print(f\"actual = {calculate_b(array_a, array_c)}\")\n>       assert len(array_b) == len(calculate_b(array_a, array_c))\nE       AssertionError: assert 2 == 5\nE        +  where 2 = len(['2', '4'])\nE        +  and   5 = len({'1', '2', '3', '4', '5'})\nE        +    where {'1', '2', '3', '4', '5'} = calculate_b([4, 3, 5, 1], [3, 5, 6, 7, 8, 9])\n\nsrc/test/java/algorithms/EasySumSetProblem/test_easy_sum_set.py:20: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "3f9db7fd5637ccd",
      "name" : "stdout",
      "source" : "3f9db7fd5637ccd.txt",
      "type" : "text/plain",
      "size" : 57
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "src.test.java.algorithms.EasySumSetProblem"
  }, {
    "name" : "suite",
    "value" : "test_easy_sum_set"
  }, {
    "name" : "host",
    "value" : "fv-az173-970"
  }, {
    "name" : "thread",
    "value" : "3060-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "src.test.java.algorithms.EasySumSetProblem.test_easy_sum_set"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "array_a",
    "value" : "[4, 3, 5, 1]"
  }, {
    "name" : "array_b",
    "value" : "['2', '4']"
  }, {
    "name" : "array_c",
    "value" : "[3, 5, 6, 7, 8, 9]"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 5,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 5
      },
      "items" : [ {
        "uid" : "a4d2269664084f54",
        "reportUrl" : "https://apetrovskiy.github.io/testHaEa/4//#testresult/a4d2269664084f54",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 2 == 5\n +  where 2 = len(['2', '4'])\n +  and   5 = len({'1', '2', '3', '4', '5'})\n +    where {'1', '2', '3', '4', '5'} = calculate_b([4, 3, 5, 1], [3, 5, 6, 7, 8, 9])",
        "time" : {
          "start" : 1618940594642,
          "stop" : 1618940594643,
          "duration" : 1
        }
      }, {
        "uid" : "6e0ff241a2039a90",
        "reportUrl" : "https://apetrovskiy.github.io/testHaEa/3//#testresult/6e0ff241a2039a90",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 2 == 5\n +  where 2 = len(['2', '4'])\n +  and   5 = len({'1', '2', '3', '4', '5'})\n +    where {'1', '2', '3', '4', '5'} = calculate_b([4, 3, 5, 1], [3, 5, 6, 7, 8, 9])",
        "time" : {
          "start" : 1618939645398,
          "stop" : 1618939645399,
          "duration" : 1
        }
      }, {
        "uid" : "8e7514f414fb7f20",
        "reportUrl" : "https://apetrovskiy.github.io/testHaEa/2//#testresult/8e7514f414fb7f20",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 2 == 5\n +  where 2 = len(['2', '4'])\n +  and   5 = len({'1', '2', '3', '4', '5'})\n +    where {'1', '2', '3', '4', '5'} = calculate_b([4, 3, 5, 1], [3, 5, 6, 7, 8, 9])",
        "time" : {
          "start" : 1618933916008,
          "stop" : 1618933916008,
          "duration" : 0
        }
      }, {
        "uid" : "c6af3de69ee870a7",
        "reportUrl" : "https://apetrovskiy.github.io/testHaEa/1//#testresult/c6af3de69ee870a7",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 2 == 5\n +  where 2 = len(['2', '4'])\n +  and   5 = len({'1', '2', '3', '4', '5'})\n +    where {'1', '2', '3', '4', '5'} = calculate_b([4, 3, 5, 1], [3, 5, 6, 7, 8, 9])",
        "time" : {
          "start" : 1618612338967,
          "stop" : 1618612338967,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "a866259929b32e4b.json",
  "parameterValues" : [ "[4, 3, 5, 1]", "['2', '4']", "[3, 5, 6, 7, 8, 9]" ]
}